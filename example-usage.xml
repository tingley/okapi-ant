<project name="test" default="build" basedir="."
         xmlns:okapi="antlib:com.spartansoftwareinc.okapi.ant">

    <!-- Specify local Okapi install via OKAPI_HOME envar for portability,
       - or else hard code the path. -->
    <property environment="env"/>
    <condition property="okapi.lib" value="${env.OKAPI_HOME}/lib"
        else="/path/to/your/okapi/installation">
        <isset property="env.OKAPI_HOME"/>
    </condition>

    <!-- okapi-ant needs both its own code and an Okapi installation to load. -->
    <path id="okapi.classpath">
        <fileset dir="${okapi.lib}" includes="**/*.jar" />
        <fileset dir="target" includes="okapi-ant-1.0.0.jar" />
    </path>

    <!-- Load all the tasks in the okapi namespace. -->
    <taskdef uri="antlib:com.spartansoftwareinc.okapi.ant"
        resource="com/spartansoftwareinc/okapi/ant/antlib.xml"
        classpathref="okapi.classpath" />

    <target name="build">
        <!-- First method: from explicit pipeline -->
        <okapi:mkbconf pipeline="config/pipeline.pln" 
                 bconfPath="output.bconf"
                 filterConfigDir="config">
            <fileset dir="config" includes="**/*.jar"/>
            <!-- custom filter configuration; the task will look in
               - ${filterConfigDir} to find it. -->
            <filterMapping extension=".xml" filterConfig="okf_xmlstream@cdata" />
            <!-- filter configuration from a custom filter contained in a
               - plugin 
            <filterMapping extension="" filterConfig="okf_foo" />
           -->
        </okapi:mkbconf>
        <delete dir="t" failonerror="no"/>
        <mkdir dir="t"/>
        <okapi:installbconf bconf="output.bconf" dir="t" />
        <!-- Second method: from rainbow settings (.rnb).  This will
             include both the pipeline from the RNB and any non-default
             filter mappings it defines. -->
        <okapi:mkbconf settings="config/settings.rnb"
                 bconfPath="output2.bconf"
                 filterConfigDir="config">
                 <!--
            <fileset dir="config" includes="**/*.jar"/>
            -->
            <!-- 
               - filter configs are imported from the rnb file; these are 
               - then added.
            <filterMapping extension=".xml" filterConfig="okf_xmlstream@cdata" />
            -->
            <filterMapping extension="" filterConfig="okf_xml" />
        </okapi:mkbconf>
        <delete dir="t2" failonerror="no"/>
        <mkdir dir="t2"/>
        <okapi:installbconf bconf="output2.bconf" dir="t2" />
    </target>

    <!-- Translation task example: Translate localizable assets as
       - part of the build process. Specify -Dokapi.generate=false to prevent
       - generation of OmegaT translation kits for incomplete languages. -->
    <target name="translate">
        <okapi:translate srcLang="en-us" srx="l10n/Segmentation.srx">
                <filterMapping extension=".properties" filterConfig="okf_properties" />
                <fileset dir="src" includes="**/Strings.properties" />
            </okapi:translate>
    </target>

</project>
